/***************** 실행관련 명령어 ************************/
o h2 실행
 - h2w.bat -webPort 8082 -tcpPort 9099


o 카프카 실행
 - cd C:\DEV\kafka_2.13-3.2.0
 - 주키퍼 실행 : bin\windows\zookeeper-server-start.bat config\zookeeper.properties
 - 카프카 실행 : bin\windows\kafka-server-start.bat config\server.properties
 - 프로듀서 : .\bin\windows\kafka-console-producer.bat --bootstrap-server localhost:9099 --topic ecomarket
 - 컨슈머 : .\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9099 --topic ecomarket --from-beginning
  - 서비확인(주키퍼) : netstat -an -o | findstr 2181
  - 서버확인(카프카) : netstat -an -o | findstr 9092
  - 서버확인(8080) : netstat -an -o | findstr 8080
  - 서버죽이기 : taskkill /PID 22956 /F taskkill /f /21956  --> 관리자권한으로 실행해야함
  - 카프카 서버 오류시 : /tmp/kafka-logs 폴더부터 다 삭제 해도 됨

o 카프카 실행(도커 컴포즈를 이용)
  - docker-compose up
  - docker-compose -f docker-compose.yml up -d

o jar 파일 만들기
 - .\mvnw clean
 - .\mvnw package -B

o jar 파일 실행할때(필요는 없음)
 - cd C:\Users\이정원\IdeaProjects\mypage\target
 - java -jar mypage-0.0.1-SNAPSHOT.jar

o 도커 실행(로컬)
 - docker build -t mypage:lastest .
 - docker run -d -p 8080:8080 --name mypage mypage:lastest

o 도커 실행
 - docker build -t 104844728320.dkr.ecr.ap-northeast-2.amazonaws.com/mypage:lastest .
 - aws configure
 - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 104844728320.dkr.ecr.ap-northeast-2.amazonaws.com
   > 오류 발생시, docker login --username AWS -p $(aws ecr get-login-password --region ap-northeast-2) 104844728320.dkr.ecr.ap-northeast-2.amazonaws.com
 - docker push 104844728320.dkr.ecr.ap-northeast-2.amazonaws.com/mypage:lastest

o 쿠버네티스 실행
cd C:\Users\이정원\IdeaProjects\mypage\src\main\java\com\example\mypage\kubernetes -- deployment 실행하기
kubectl delete deployment mypage -n ecomarket
kubectl delete svc mypage-svc -n ecomarket
kubectl apply -f deployment.yml -- 디플로이먼트 실행하기
kubectl apply -f service.yml    -- 서비스 실행하기

kubectl get all -n ecomarket -o wide
kubectl logs -f mypage-78954c559-tbk75  -n ecomarket  # pod에서 만든 로그 확인
kubectl create namespace ecomarket # 네임스페이스 만들기

o 데이터 생성 쿼리
SELECT * FROM my_info;
INSERT INTO my_info VALUES ('1','kama8028@naver.com','한용선','01038474206');
SELECT * FROM my_address;
INSERT INTO my_address VALUES ('1','집','경기도 성남시 분당구 백현로 206','ECO 아파트 101동 101호','1');
INSERT INTO my_address VALUES ('2','집','경기도 수원시 팔달구 ECO로','환경아파트 101동 101호','1');
INSERT INTO my_address VALUES ('3','집','경기도 성남시 분당구 수내로 101','지웰푸르지오 5층','1');
SELECT * FROM my_eco_point;
INSERT INTO my_eco_point VALUES('1','3000','1');
SELECT * FROM my_order;
INSERT INTO my_order VALUES('1','경기도 성남시 분당구','READY','1','2022-06-17');
INSERT INTO my_order VALUES('2','경기도 성남시 분당구','COMP','1','2022-05-23');
SELECT * FROM order_item;
INSERT INTO order_item VALUES('1','5000','1','1','친환경노트','0','1');
INSERT INTO order_item VALUES('2','70000','1','2','폐타이어가방','0','2');
INSERT INTO order_item VALUES('3','5000','1','3','친환경비닐봉투','0','2');
SELECT * FROM my_disposal;
INSERT INTO my_disposal VALUES('1','판교지점','2022-05-12','1');
INSERT INTO my_disposal VALUES('2','야탑지점','2022-04-30','1');
INSERT INTO my_disposal VALUES('3','수내지점','2022-03-22','1');
SELECT * FROM disposal_item;
INSERT INTO disposal_item VALUES('1','2000','20','0','1','폐트병','1');
INSERT INTO disposal_item VALUES('2','1000','5','0','2','유리병','1');
INSERT INTO disposal_item VALUES('3','1000','1','0','3','종이','2');
INSERT INTO disposal_item VALUES('4','1000','10','0','4','알류미늄캔','2');
INSERT INTO disposal_item VALUES('5','2000','10','0','2','유리병','3');

COMMIT;

o 카프카 오더 테스트 자료
{"eventType":"PaymentCompleted","timestamp":1656637224646,"id":5,"addressId":1,"memberId":1,"ecoOrderId":7,"ecoOrderDate":"2022-06-17T00:00:00","totalPrice":10000, "paymentMethod":"Cash", "orderItem":[{"ecoProductId":1, "ecoProductName":"BACHU1", "ecoProductUnitPrice":500, "ecoProductQty":3}, {"ecoProductId":2, "ecoProductName":"BACHU2", "ecoProductUnitPrice":1000, "ecoProductQty":1}]}
{"eventType":"DeliveryCompleted","timestamp":3656637224646,"deliveryId":5,"memberId":1,"deliveryStatus":"COMP","deliveryStartDt":"2022-06-17","deliveryEndDt":"2022-06-17","orderId":1}

/****************** 테스트 관련 명령어 **********************/
** 등록
http localhost:8081/reviews memberId="1" orderItem[orderItemId]="1" orderItem[orderItemName]="친환경노트" reviewDescription="재질이 좋아요!" satisfactionType="GOOD" reviewDate="2022-06-16T13:50:00"
http localhost:8081/reviews memberId="2" orderItem[orderId]="2" orderItem[orderItemId]="2" orderItem[orderItemName]="폐타이어가방" reviewDescription="환경보호에 앞장서는것 같습니다." satisfactionType="GOOD" reviewDate="2022-06-16T13:50:00"
http localhost:8081/reviews memberId="2" orderItem[orderItemId]="3" orderItem[orderItemName]="친환경비닐봉투" reviewDescription="잘 찢어져요...ㅠ" satisfactionType="BAD" reviewDate="2022-06-16T13:50:00"

** 조회
http localhost:8081/reviews/1
http localhost:8081/reviews/2
http localhost:8081/reviews/3

** 수정
http PATCH localhost:8080/reviews/1 reviewDescription="재질은 좋은데 가격이 비쌉니다." satisfactionType="NORMAL" reviewDate="2022-06-17T13:50:00"
http PATCH localhost:8080/reviews/2 reviewDescription="환경보호에 앞장서는것 같습니다. 다양한 모델이 나왔으면 합니다."
http PATCH localhost:8080/reviews/3 reviewDescription="잘 찢어져요...ㅠ 조금 두껍게 만들어주세요."

** 삭제
http DELETE localhost:8080/reviews/1
http DELETE localhost:8080/reviews/2
http DELETE localhost:8080/reviews/3

/****************** jar 파일 생성 **********************/
mvnw package -B

/****************** 기타명령어 명령어 **********************/

https://gitpod.io/#

http :8080/pets
http :8080/reviews/5

등록 : http "http://localhost:8080/pets" start="2022-06-26 12:00" end
수정시 : http PATCH "http://localhost:8080/pets/1" status=DE~~~~

dogwalker="url를 넣어줘야 함"

menu[]="url"

http POST http://localhost:8080/members name="한용선"
http POST http://localhost:8080/members name="권중석"
http POST http://localhost:8080/members name="이규홍"
http POST http://localhost:8080/orderItems item="친환경노트"
http POST http://localhost:8080/orderItems item="친환경가방"


http POST http://localhost:8080/reviews reviewTitle="좋아요" reviewDescription="제품의 질이 좋습니다." statisfactionType="GOOD" member="http://localhost:8080/members/1" orderItem="http://localhost:8080/orderItems/5"





docker build -t mypage:lastest .

docker exec -it 285c3f2a0024 /bin/sh


